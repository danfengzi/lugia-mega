// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`rules lints 1`] = `
Object {
  "errorCount": 6,
  "fixableErrorCount": 1,
  "fixableWarningCount": 0,
  "formatResults": "
  [4mpackages\\\\eslint-config-mega\\\\test\\\\lints\\\\standard.js[24m[8m[90m:3:1[39m[22m[28m
  [31m√ó[39m  [2m3[90m:[39m1[22m   [1mloooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong[22m is not defined.  [2mno-undef[22m
  [31m√ó[39m  [2m3[90m:[39m1[22m   Expected an assignment or function call and instead saw an expression.                     [2mno-unused-expressions[22m
  [31m√ó[39m  [2m4[90m:[39m3[22m   [1mindex[22m is not defined.                                                                      [2mno-undef[22m

  [4mpackages\\\\eslint-config-mega\\\\test\\\\lints\\\\unicorn.js[24m[8m[90m:3:1[39m[22m[28m
  [31m√ó[39m  [2m3[90m:[39m1[22m   Expected an assignment or function call and instead saw an expression.                     [2mno-unused-expressions[22m
  [31m√ó[39m  [2m3[90m:[39m1[22m   Expected newline before \\"16777215\\" directive.                                              [2mlines-around-directive[22m

  [4mpackages\\\\eslint-config-mega\\\\test\\\\lints\\\\react.js[24m[8m[90m:1:23[39m[22m[28m
  [31m√ó[39m  [2m1[90m:[39m23[22m  Unable to resolve path to module [1mreact[22m.                                                    [2mimport/no-unresolved[22m

  [31m6 errors[39m
",
  "results": Array [
    Object {
      "errorCount": 0,
      "filePath": "test\\\\lints\\\\@typescript-eslint.ts",
      "fixableErrorCount": 0,
      "fixableWarningCount": 0,
      "messages": Array [],
      "warningCount": 0,
    },
    Object {
      "errorCount": 0,
      "filePath": "test\\\\lints\\\\babel.js",
      "fixableErrorCount": 0,
      "fixableWarningCount": 0,
      "messages": Array [],
      "warningCount": 0,
    },
    Object {
      "errorCount": 0,
      "filePath": "test\\\\lints\\\\flowtype.js",
      "fixableErrorCount": 0,
      "fixableWarningCount": 0,
      "messages": Array [],
      "warningCount": 0,
    },
    Object {
      "errorCount": 1,
      "filePath": "test\\\\lints\\\\react.js",
      "fixableErrorCount": 0,
      "fixableWarningCount": 0,
      "messages": Array [
        Object {
          "column": 23,
          "endColumn": 30,
          "endLine": 1,
          "line": 1,
          "message": "Unable to resolve path to module 'react'.",
          "nodeType": "Literal",
          "ruleId": "import/no-unresolved",
          "severity": 2,
        },
      ],
      "source": "const React = require('react');

// Prettier wants several attributes on the same line, but \\"plugin:react/all\\"
// only allows one per line.
module.exports = <div one two />;
",
      "warningCount": 0,
    },
    Object {
      "errorCount": 3,
      "filePath": "test\\\\lints\\\\standard.js",
      "fixableErrorCount": 0,
      "fixableWarningCount": 0,
      "messages": Array [
        Object {
          "column": 1,
          "endColumn": 74,
          "endLine": 3,
          "line": 3,
          "message": "'loooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong' is not defined.",
          "messageId": "undef",
          "nodeType": "Identifier",
          "ruleId": "no-undef",
          "severity": 2,
        },
        Object {
          "column": 1,
          "endColumn": 3,
          "endLine": 5,
          "line": 3,
          "message": "Expected an assignment or function call and instead saw an expression.",
          "nodeType": "ExpressionStatement",
          "ruleId": "no-unused-expressions",
          "severity": 2,
        },
        Object {
          "column": 3,
          "endColumn": 8,
          "endLine": 4,
          "line": 4,
          "message": "'index' is not defined.",
          "messageId": "undef",
          "nodeType": "Identifier",
          "ruleId": "no-undef",
          "severity": 2,
        },
      ],
      "source": "// Prettier wants to break on new lines inside the square brackets, but
// \`standard/computed-property-even-spacing\` wants all on one line.
loooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong[
  index
];
",
      "warningCount": 0,
    },
    Object {
      "errorCount": 2,
      "filePath": "test\\\\lints\\\\unicorn.js",
      "fixableErrorCount": 1,
      "fixableWarningCount": 0,
      "messages": Array [
        Object {
          "column": 1,
          "endColumn": 10,
          "endLine": 3,
          "line": 3,
          "message": "Expected an assignment or function call and instead saw an expression.",
          "nodeType": "ExpressionStatement",
          "ruleId": "no-unused-expressions",
          "severity": 2,
        },
        Object {
          "column": 1,
          "endColumn": 10,
          "endLine": 3,
          "fix": Object {
            "range": Array [
              111,
              111,
            ],
            "text": "
",
          },
          "line": 3,
          "message": "Expected newline before \\"16777215\\" directive.",
          "messageId": "expected",
          "nodeType": "ExpressionStatement",
          "ruleId": "lines-around-directive",
          "severity": 2,
        },
      ],
      "source": "// Prettier wants number literals to be lowercase, but
// \`plugin:unicorn/recommended\` wants them uppercase.
0xffffff;
",
      "warningCount": 0,
    },
  ],
  "usedDeprecatedRules": Array [
    Object {
      "replacedBy": Array [
        "triple-slash-reference",
      ],
      "ruleId": "@typescript-eslint/no-triple-slash-reference",
    },
    Object {
      "replacedBy": Array [
        "consistent-type-definitions",
      ],
      "ruleId": "@typescript-eslint/prefer-interface",
    },
    Object {
      "replacedBy": Array [],
      "ruleId": "flowtype/valid-syntax",
    },
    Object {
      "replacedBy": Array [],
      "ruleId": "jsx-a11y/label-has-for",
    },
    Object {
      "replacedBy": Array [
        "padding-line-between-statements",
      ],
      "ruleId": "lines-around-directive",
    },
  ],
  "warningCount": 0,
}
`;

exports[`rules should report errors 1`] = `
Object {
  "errorCount": 36,
  "fixableErrorCount": 26,
  "fixableWarningCount": 0,
  "formatResults": "
  [4mpackages\\\\eslint-config-mega\\\\test\\\\errors\\\\semicolon.js[24m[8m[90m:1:13[39m[22m[28m
  [31m√ó[39m   [2m1[90m:[39m13[22m  Replace [1m\\"foo\\"[22m with [1m'foo';[22m                                                                                                            [2mprettier/prettier[22m
  [31m√ó[39m   [2m2[90m:[39m13[22m  Delete [1m¬∑[22m                                                                                                                             [2mprettier/prettier[22m
  [31m√ó[39m   [2m4[90m:[39m5[22m   [1mbar[22m is assigned a value but never used.                                                                                              [2mno-unused-vars[22m
  [31m√ó[39m   [2m4[90m:[39m5[22m   [1mbar[22m is never reassigned. Use [1mconst[22m instead.                                                                                          [2mprefer-const[22m
  [31m√ó[39m   [2m4[90m:[39m16[22m  Insert [1m;[22m                                                                                                                             [2mprettier/prettier[22m
  [31m√ó[39m   [2m6[90m:[39m7[22m   [1ma[22m is assigned a value but never used.                                                                                                [2mno-unused-vars[22m
  [31m√ó[39m   [2m8[90m:[39m7[22m   Delete [1m,[22m                                                                                                                             [2mprettier/prettier[22m
  [31m√ó[39m   [2m9[90m:[39m2[22m   Insert [1m;[22m                                                                                                                             [2mprettier/prettier[22m

  [4mpackages\\\\eslint-config-mega\\\\test\\\\errors\\\\React.tsx[24m[8m[90m:11:13[39m[22m[28m
  [33m‚Äº[39m  [2m11[90m:[39m1[22m   Missing return type on function.                                                                                                     [2m@typescript-eslint/explicit-function-return-type[22m
  [33m‚Äº[39m  [2m15[90m:[39m16[22m  Missing return type on function.                                                                                                     [2m@typescript-eslint/explicit-function-return-type[22m
  [31m√ó[39m  [2m11[90m:[39m13[22m  Replace [1mchildren}:{children:string})[22m with [1m¬∑children¬∑}:¬∑{¬∑children:¬∑string¬∑})¬∑[22m                                                        [2mprettier/prettier[22m
  [31m√ó[39m  [2m12[90m:[39m10[22m  [1mReact[22m must be in scope when using JSX                                                                                                [2mreact/react-in-jsx-scope[22m
  [31m√ó[39m  [2m12[90m:[39m27[22m  Insert [1m;[22m                                                                                                                             [2mprettier/prettier[22m
  [31m√ó[39m  [2m15[90m:[39m18[22m  Insert [1m¬∑[22m                                                                                                                             [2mprettier/prettier[22m
  [31m√ó[39m  [2m16[90m:[39m10[22m  [1mReact[22m must be in scope when using JSX                                                                                                [2mreact/react-in-jsx-scope[22m
  [31m√ó[39m  [2m16[90m:[39m12[22m  Insert [1m¬∑[22m                                                                                                                             [2mprettier/prettier[22m
  [31m√ó[39m  [2m17[90m:[39m2[22m   Insert [1m;[22m                                                                                                                             [2mprettier/prettier[22m

  [4mpackages\\\\eslint-config-mega\\\\test\\\\errors\\\\hooks.jsx[24m[8m[90m:11:19[39m[22m[28m
  [31m√ó[39m  [2m11[90m:[39m19[22m  Unable to resolve path to module [1mreact[22m.                                                                                              [2mimport/no-unresolved[22m
  [31m√ó[39m  [2m13[90m:[39m14[22m  Insert [1m¬∑[22m                                                                                                                             [2mprettier/prettier[22m
  [31m√ó[39m  [2m14[90m:[39m3[22m   React Hook \\"React.useState\\" is called in function \\"dd\\" which is neither a React function component or a custom React Hook function.  [2mreact-hooks/rules-of-hooks[22m
  [31m√ó[39m  [2m17[90m:[39m15[22m  Replace [1m()[22m with [1m¬∑()¬∑[22m                                                                                                                 [2mprettier/prettier[22m
  [31m√ó[39m  [2m18[90m:[39m13[22m  Replace [1m/>[22m with [1m¬∑/>;[22m                                                                                                                 [2mprettier/prettier[22m
  [31m√ó[39m  [2m19[90m:[39m2[22m   Insert [1m;[22m                                                                                                                             [2mprettier/prettier[22m
  [31m√ó[39m  [2m21[90m:[39m5[22m   Insert [1m;[22m                                                                                                                             [2mprettier/prettier[22m

  [4mpackages\\\\eslint-config-mega\\\\test\\\\errors\\\\React.jsx[24m[8m[90m:11:18[39m[22m[28m
  [31m√ó[39m  [2m11[90m:[39m18[22m  Replace [1m=>[22m with [1m¬∑=>¬∑[22m                                                                                                                 [2mprettier/prettier[22m
  [31m√ó[39m  [2m12[90m:[39m10[22m  [1mReact[22m must be in scope when using JSX                                                                                                [2mreact/react-in-jsx-scope[22m
  [31m√ó[39m  [2m12[90m:[39m10[22m  Replace [1m<p>dsa<br></br>[22m with [1m(‚êç‚èé¬∑¬∑¬∑¬∑<p>‚êç‚èé¬∑¬∑¬∑¬∑¬∑¬∑dsa<br></br>‚êç‚èé¬∑¬∑¬∑¬∑[22m                                                                    [2mprettier/prettier[22m
  [31m√ó[39m  [2m12[90m:[39m16[22m  Empty components are self-closing                                                                                                    [2mreact/self-closing-comp[22m
  [31m√ó[39m  [2m12[90m:[39m16[22m  [1mReact[22m must be in scope when using JSX                                                                                                [2mreact/react-in-jsx-scope[22m
  [31m√ó[39m  [2m13[90m:[39m1[22m   Replace [1m}[22m with [1m¬∑¬∑);‚êç‚èé};[22m                                                                                                              [2mprettier/prettier[22m

  [4mpackages\\\\eslint-config-mega\\\\test\\\\errors\\\\d.ts[24m[8m[90m:13:1[39m[22m[28m
  [33m‚Äº[39m  [2m13[90m:[39m5[22m   [1mx[22m is assigned a value but never used.                                                                                                [2m@typescript-eslint/no-unused-vars[22m
  [33m‚Äº[39m  [2m15[90m:[39m7[22m   [1md[22m is assigned a value but never used.                                                                                                [2m@typescript-eslint/no-unused-vars[22m
  [33m‚Äº[39m  [2m18[90m:[39m5[22m   [1mc[22m is assigned a value but never used.                                                                                                [2m@typescript-eslint/no-unused-vars[22m
  [31m√ó[39m  [2m13[90m:[39m1[22m   Unexpected var, use let or const instead.                                                                                            [2mno-var[22m
  [31m√ó[39m  [2m13[90m:[39m5[22m   Type number trivially inferred from a number literal, remove type annotation.                                                        [2m@typescript-eslint/no-inferrable-types[22m
  [31m√ó[39m  [2m16[90m:[39m1[22m   [1md[22m is constant.                                                                                                                       [2mno-const-assign[22m
  [31m√ó[39m  [2m21[90m:[39m9[22m   Insert [1m¬∑[22m                                                                                                                             [2mprettier/prettier[22m
  [31m√ó[39m  [2m22[90m:[39m15[22m  Insert [1m;[22m                                                                                                                             [2mprettier/prettier[22m

  [4mpackages\\\\eslint-config-mega\\\\test\\\\errors\\\\flow.js[24m[8m[90m:14:7[39m[22m[28m
  [31m√ó[39m  [2m14[90m:[39m7[22m   [1ma[22m is assigned a value but never used.                                                                                                [2mno-unused-vars[22m
  [31m√ó[39m  [2m14[90m:[39m7[22m   There must be a space after const type annotation colon.                                                                             [2mflowtype/space-after-type-colon[22m
  [31m√ó[39m  [2m14[90m:[39m9[22m   Insert [1m¬∑[22m                                                                                                                             [2mprettier/prettier[22m

  [33m5 warnings[39m
  [31m36 errors[39m
",
  "results": Array [
    Object {
      "errorCount": 5,
      "filePath": "test\\\\errors\\\\d.ts",
      "fixableErrorCount": 4,
      "fixableWarningCount": 0,
      "messages": Array [
        Object {
          "column": 5,
          "endColumn": 14,
          "endLine": 13,
          "line": 13,
          "message": "'x' is assigned a value but never used.",
          "nodeType": "Identifier",
          "ruleId": "@typescript-eslint/no-unused-vars",
          "severity": 1,
        },
        Object {
          "column": 7,
          "endColumn": 8,
          "endLine": 15,
          "line": 15,
          "message": "'d' is assigned a value but never used.",
          "nodeType": "Identifier",
          "ruleId": "@typescript-eslint/no-unused-vars",
          "severity": 1,
        },
        Object {
          "column": 5,
          "endColumn": 6,
          "endLine": 18,
          "line": 18,
          "message": "'c' is assigned a value but never used.",
          "nodeType": "Identifier",
          "ruleId": "@typescript-eslint/no-unused-vars",
          "severity": 1,
        },
        Object {
          "column": 1,
          "endColumn": 19,
          "endLine": 13,
          "fix": Object {
            "range": Array [
              385,
              388,
            ],
            "text": "let",
          },
          "line": 13,
          "message": "Unexpected var, use let or const instead.",
          "nodeType": "VariableDeclaration",
          "ruleId": "no-var",
          "severity": 2,
        },
        Object {
          "column": 5,
          "endColumn": 18,
          "endLine": 13,
          "fix": Object {
            "range": Array [
              390,
              398,
            ],
            "text": "",
          },
          "line": 13,
          "message": "Type number trivially inferred from a number literal, remove type annotation.",
          "messageId": "noInferrableType",
          "nodeType": "VariableDeclarator",
          "ruleId": "@typescript-eslint/no-inferrable-types",
          "severity": 2,
        },
        Object {
          "column": 1,
          "endColumn": 2,
          "endLine": 16,
          "line": 16,
          "message": "'d' is constant.",
          "messageId": "const",
          "nodeType": "Identifier",
          "ruleId": "no-const-assign",
          "severity": 2,
        },
        Object {
          "column": 9,
          "endColumn": 9,
          "endLine": 21,
          "fix": Object {
            "range": Array [
              465,
              465,
            ],
            "text": " ",
          },
          "line": 21,
          "message": "Insert \`¬∑\`",
          "nodeType": null,
          "ruleId": "prettier/prettier",
          "severity": 2,
        },
        Object {
          "column": 15,
          "endColumn": 15,
          "endLine": 22,
          "fix": Object {
            "range": Array [
              492,
              492,
            ],
            "text": ";",
          },
          "line": 22,
          "message": "Insert \`;\`",
          "nodeType": null,
          "ruleId": "prettier/prettier",
          "severity": 2,
        },
      ],
      "source": "/**
 * Created Date: Sunday, July 14th 2019, 9:38:48 pm
 * Author: hanjingbo@ysstech.com | jingboup@gmail.com
 * -----
 * Last Modified: Monday, July 15th 2019, 11:34:58 am
 * Modified By: hanjingbo <hanjingbo@ysstech.com | jingboup@gmail.com>
 * -----
 * Copyright (c) 2019-present, #Lugia#.
 * ------------------------------------
 * JavaScript will save your soul!
 */

var x: number = 1;

const d = [];
d = 2;

let c = 3;
c = 'c3';

const a:string = 0;
console.log(a)
",
      "warningCount": 3,
    },
    Object {
      "errorCount": 3,
      "filePath": "test\\\\errors\\\\flow.js",
      "fixableErrorCount": 2,
      "fixableWarningCount": 0,
      "messages": Array [
        Object {
          "column": 7,
          "endColumn": 15,
          "endLine": 14,
          "line": 14,
          "message": "'a' is assigned a value but never used.",
          "nodeType": "Identifier",
          "ruleId": "no-unused-vars",
          "severity": 2,
        },
        Object {
          "column": 7,
          "endColumn": 19,
          "endLine": 14,
          "fix": Object {
            "range": Array [
              402,
              402,
            ],
            "text": " ",
          },
          "line": 14,
          "message": "There must be a space after const type annotation colon.",
          "nodeType": "VariableDeclarator",
          "ruleId": "flowtype/space-after-type-colon",
          "severity": 2,
        },
        Object {
          "column": 9,
          "endColumn": 9,
          "endLine": 14,
          "fix": Object {
            "range": Array [
              402,
              402,
            ],
            "text": " ",
          },
          "line": 14,
          "message": "Insert \`¬∑\`",
          "nodeType": null,
          "ruleId": "prettier/prettier",
          "severity": 2,
        },
      ],
      "source": "/**
 * Created Date: Sunday, July 14th 2019, 9:03:46 pm
 * Author: hanjingbo@ysstech.com | jingboup@gmail.com
 * -----
 * Last Modified: Sunday, July 14th 2019, 9:05:08 pm
 * Modified By: hanjingbo <hanjingbo@ysstech.com | jingboup@gmail.com>
 * -----
 * Copyright (c) 2019-present, #Lugia#.
 * ------------------------------------
 * JavaScript will save your soul!
 */

// @flow
const a:string = 0;
",
      "warningCount": 0,
    },
    Object {
      "errorCount": 7,
      "filePath": "test\\\\errors\\\\hooks.jsx",
      "fixableErrorCount": 5,
      "fixableWarningCount": 0,
      "messages": Array [
        Object {
          "column": 19,
          "endColumn": 26,
          "endLine": 11,
          "line": 11,
          "message": "Unable to resolve path to module 'react'.",
          "nodeType": "Literal",
          "ruleId": "import/no-unresolved",
          "severity": 2,
        },
        Object {
          "column": 14,
          "endColumn": 14,
          "endLine": 13,
          "fix": Object {
            "range": Array [
              349,
              349,
            ],
            "text": " ",
          },
          "line": 13,
          "message": "Insert \`¬∑\`",
          "nodeType": null,
          "ruleId": "prettier/prettier",
          "severity": 2,
        },
        Object {
          "column": 3,
          "endColumn": 17,
          "endLine": 14,
          "line": 14,
          "message": "React Hook \\"React.useState\\" is called in function \\"dd\\" which is neither a React function component or a custom React Hook function.",
          "nodeType": "MemberExpression",
          "ruleId": "react-hooks/rules-of-hooks",
          "severity": 2,
        },
        Object {
          "column": 15,
          "endColumn": 17,
          "endLine": 17,
          "fix": Object {
            "range": Array [
              393,
              395,
            ],
            "text": " () ",
          },
          "line": 17,
          "message": "Replace \`()\` with \`¬∑()¬∑\`",
          "nodeType": null,
          "ruleId": "prettier/prettier",
          "severity": 2,
        },
        Object {
          "column": 13,
          "endColumn": 15,
          "endLine": 18,
          "fix": Object {
            "range": Array [
              413,
              415,
            ],
            "text": " />;",
          },
          "line": 18,
          "message": "Replace \`/>\` with \`¬∑/>;\`",
          "nodeType": null,
          "ruleId": "prettier/prettier",
          "severity": 2,
        },
        Object {
          "column": 2,
          "endColumn": 2,
          "endLine": 19,
          "fix": Object {
            "range": Array [
              418,
              418,
            ],
            "text": ";",
          },
          "line": 19,
          "message": "Insert \`;\`",
          "nodeType": null,
          "ruleId": "prettier/prettier",
          "severity": 2,
        },
        Object {
          "column": 5,
          "endColumn": 5,
          "endLine": 21,
          "fix": Object {
            "range": Array [
              426,
              426,
            ],
            "text": ";",
          },
          "line": 21,
          "message": "Insert \`;\`",
          "nodeType": null,
          "ruleId": "prettier/prettier",
          "severity": 2,
        },
      ],
      "source": "/*
 * Created Date: Sunday, July 14th 2019, 8:54:38 pm
 * Author: hanjingbo@ysstech.com | jingboup@gmail.com
 * -----
 * Last Modified: Sunday, July 14th 2019, 8:59:42 pm
 * Modified By: hanjingbo <hanjingbo@ysstech.com | jingboup@gmail.com>
 * -----
 * Copyright (c) 2019-present, #Lugia#.
 */

import React from 'react';

function dd(){
  React.useState(0);
}

export default()=> {
  return <br/>
}

dd()
",
      "warningCount": 0,
    },
    Object {
      "errorCount": 6,
      "filePath": "test\\\\errors\\\\React.jsx",
      "fixableErrorCount": 4,
      "fixableWarningCount": 0,
      "messages": Array [
        Object {
          "column": 18,
          "endColumn": 20,
          "endLine": 11,
          "fix": Object {
            "range": Array [
              323,
              325,
            ],
            "text": " => ",
          },
          "line": 11,
          "message": "Replace \`=>\` with \`¬∑=>¬∑\`",
          "nodeType": null,
          "ruleId": "prettier/prettier",
          "severity": 2,
        },
        Object {
          "column": 10,
          "endColumn": 13,
          "endLine": 12,
          "line": 12,
          "message": "'React' must be in scope when using JSX",
          "nodeType": "JSXOpeningElement",
          "ruleId": "react/react-in-jsx-scope",
          "severity": 2,
        },
        Object {
          "column": 10,
          "endColumn": 25,
          "endLine": 12,
          "fix": Object {
            "range": Array [
              337,
              352,
            ],
            "text": "(
    <p>
      dsa<br></br>
    ",
          },
          "line": 12,
          "message": "Replace \`<p>dsa<br></br>\` with \`(‚êç‚èé¬∑¬∑¬∑¬∑<p>‚êç‚èé¬∑¬∑¬∑¬∑¬∑¬∑dsa<br></br>‚êç‚èé¬∑¬∑¬∑¬∑\`",
          "nodeType": null,
          "ruleId": "prettier/prettier",
          "severity": 2,
        },
        Object {
          "column": 16,
          "endColumn": 20,
          "endLine": 12,
          "fix": Object {
            "range": Array [
              346,
              352,
            ],
            "text": " />",
          },
          "line": 12,
          "message": "Empty components are self-closing",
          "nodeType": "JSXOpeningElement",
          "ruleId": "react/self-closing-comp",
          "severity": 2,
        },
        Object {
          "column": 16,
          "endColumn": 20,
          "endLine": 12,
          "line": 12,
          "message": "'React' must be in scope when using JSX",
          "nodeType": "JSXOpeningElement",
          "ruleId": "react/react-in-jsx-scope",
          "severity": 2,
        },
        Object {
          "column": 1,
          "endColumn": 2,
          "endLine": 13,
          "fix": Object {
            "range": Array [
              358,
              359,
            ],
            "text": "  );
};",
          },
          "line": 13,
          "message": "Replace \`}\` with \`¬∑¬∑);‚êç‚èé};\`",
          "nodeType": null,
          "ruleId": "prettier/prettier",
          "severity": 2,
        },
      ],
      "source": "/*
 * Created Date: Sunday, July 14th 2019, 5:15:23 pm
 * Author: hanjingbo@ysstech.com | jingboup@gmail.com
 * -----
 * Last Modified: Sunday, July 14th 2019, 8:19:52 pm
 * Modified By: hanjingbo <hanjingbo@ysstech.com | jingboup@gmail.com>
 * -----
 * Copyright (c) 2019-present, #Lugia#.
 */

export default ()=>{
  return <p>dsa<br></br></p>
}
",
      "warningCount": 0,
    },
    Object {
      "errorCount": 7,
      "filePath": "test\\\\errors\\\\React.tsx",
      "fixableErrorCount": 5,
      "fixableWarningCount": 0,
      "messages": Array [
        Object {
          "column": 1,
          "endColumn": 2,
          "endLine": 13,
          "line": 11,
          "message": "Missing return type on function.",
          "messageId": "missingReturnType",
          "nodeType": "FunctionDeclaration",
          "ruleId": "@typescript-eslint/explicit-function-return-type",
          "severity": 1,
        },
        Object {
          "column": 16,
          "endColumn": 2,
          "endLine": 17,
          "line": 15,
          "message": "Missing return type on function.",
          "messageId": "missingReturnType",
          "nodeType": "ArrowFunctionExpression",
          "ruleId": "@typescript-eslint/explicit-function-return-type",
          "severity": 1,
        },
        Object {
          "column": 13,
          "endColumn": 41,
          "endLine": 11,
          "fix": Object {
            "range": Array [
              318,
              346,
            ],
            "text": " children }: { children: string }) ",
          },
          "line": 11,
          "message": "Replace \`children}:{children:string})\` with \`¬∑children¬∑}:¬∑{¬∑children:¬∑string¬∑})¬∑\`",
          "nodeType": null,
          "ruleId": "prettier/prettier",
          "severity": 2,
        },
        Object {
          "column": 10,
          "endColumn": 13,
          "endLine": 12,
          "line": 12,
          "message": "'React' must be in scope when using JSX",
          "nodeType": "JSXOpeningElement",
          "ruleId": "react/react-in-jsx-scope",
          "severity": 2,
        },
        Object {
          "column": 27,
          "endColumn": 27,
          "endLine": 12,
          "fix": Object {
            "range": Array [
              375,
              375,
            ],
            "text": ";",
          },
          "line": 12,
          "message": "Insert \`;\`",
          "nodeType": null,
          "ruleId": "prettier/prettier",
          "severity": 2,
        },
        Object {
          "column": 18,
          "endColumn": 18,
          "endLine": 15,
          "fix": Object {
            "range": Array [
              399,
              399,
            ],
            "text": " ",
          },
          "line": 15,
          "message": "Insert \`¬∑\`",
          "nodeType": null,
          "ruleId": "prettier/prettier",
          "severity": 2,
        },
        Object {
          "column": 10,
          "endColumn": 14,
          "endLine": 16,
          "line": 16,
          "message": "'React' must be in scope when using JSX",
          "nodeType": "JSXOpeningElement",
          "ruleId": "react/react-in-jsx-scope",
          "severity": 2,
        },
        Object {
          "column": 12,
          "endColumn": 12,
          "endLine": 16,
          "fix": Object {
            "range": Array [
              416,
              416,
            ],
            "text": " ",
          },
          "line": 16,
          "message": "Insert \`¬∑\`",
          "nodeType": null,
          "ruleId": "prettier/prettier",
          "severity": 2,
        },
        Object {
          "column": 2,
          "endColumn": 2,
          "endLine": 17,
          "fix": Object {
            "range": Array [
              422,
              422,
            ],
            "text": ";",
          },
          "line": 17,
          "message": "Insert \`;\`",
          "nodeType": null,
          "ruleId": "prettier/prettier",
          "severity": 2,
        },
      ],
      "source": "/*
 * Created Date: Sunday, July 14th 2019, 9:09:22 pm
 * Author: hanjingbo@ysstech.com | jingboup@gmail.com
 * -----
 * Last Modified: Sunday, July 14th 2019, 9:34:27 pm
 * Modified By: hanjingbo <hanjingbo@ysstech.com | jingboup@gmail.com>
 * -----
 * Copyright (c) 2019-present, #Lugia#.
 */

function P({children}:{children:string}){
  return <p>{children}</p>
}

export default ()=> {
  return <P/>;
}
",
      "warningCount": 2,
    },
    Object {
      "errorCount": 8,
      "filePath": "test\\\\errors\\\\semicolon.js",
      "fixableErrorCount": 6,
      "fixableWarningCount": 0,
      "messages": Array [
        Object {
          "column": 13,
          "endColumn": 18,
          "endLine": 1,
          "fix": Object {
            "range": Array [
              12,
              17,
            ],
            "text": "'foo';",
          },
          "line": 1,
          "message": "Replace \`\\"foo\\"\` with \`'foo';\`",
          "nodeType": null,
          "ruleId": "prettier/prettier",
          "severity": 2,
        },
        Object {
          "column": 13,
          "endColumn": 14,
          "endLine": 2,
          "fix": Object {
            "range": Array [
              31,
              32,
            ],
            "text": "",
          },
          "line": 2,
          "message": "Delete \`¬∑\`",
          "nodeType": null,
          "ruleId": "prettier/prettier",
          "severity": 2,
        },
        Object {
          "column": 5,
          "endColumn": 8,
          "endLine": 4,
          "line": 4,
          "message": "'bar' is assigned a value but never used.",
          "nodeType": "Identifier",
          "ruleId": "no-unused-vars",
          "severity": 2,
        },
        Object {
          "column": 5,
          "endColumn": 8,
          "endLine": 4,
          "fix": Object {
            "range": Array [
              41,
              44,
            ],
            "text": "const",
          },
          "line": 4,
          "message": "'bar' is never reassigned. Use 'const' instead.",
          "messageId": "useConst",
          "nodeType": "Identifier",
          "ruleId": "prefer-const",
          "severity": 2,
        },
        Object {
          "column": 16,
          "endColumn": 16,
          "endLine": 4,
          "fix": Object {
            "range": Array [
              56,
              56,
            ],
            "text": ";",
          },
          "line": 4,
          "message": "Insert \`;\`",
          "nodeType": null,
          "ruleId": "prettier/prettier",
          "severity": 2,
        },
        Object {
          "column": 7,
          "endColumn": 8,
          "endLine": 6,
          "line": 6,
          "message": "'a' is assigned a value but never used.",
          "nodeType": "Identifier",
          "ruleId": "no-unused-vars",
          "severity": 2,
        },
        Object {
          "column": 7,
          "endColumn": 8,
          "endLine": 8,
          "fix": Object {
            "range": Array [
              88,
              89,
            ],
            "text": "",
          },
          "line": 8,
          "message": "Delete \`,\`",
          "nodeType": null,
          "ruleId": "prettier/prettier",
          "severity": 2,
        },
        Object {
          "column": 2,
          "endColumn": 2,
          "endLine": 9,
          "fix": Object {
            "range": Array [
              92,
              92,
            ],
            "text": ";",
          },
          "line": 9,
          "message": "Insert \`;\`",
          "nodeType": null,
          "ruleId": "prettier/prettier",
          "severity": 2,
        },
      ],
      "source": "const foo = \\"foo\\"
console.log( foo);

let bar = 'bar'

const a = {
  q: 1,
  w: 2,
}
",
      "warningCount": 0,
    },
  ],
  "usedDeprecatedRules": Array [
    Object {
      "replacedBy": Array [
        "triple-slash-reference",
      ],
      "ruleId": "@typescript-eslint/no-triple-slash-reference",
    },
    Object {
      "replacedBy": Array [
        "consistent-type-definitions",
      ],
      "ruleId": "@typescript-eslint/prefer-interface",
    },
    Object {
      "replacedBy": Array [],
      "ruleId": "flowtype/valid-syntax",
    },
    Object {
      "replacedBy": Array [],
      "ruleId": "jsx-a11y/label-has-for",
    },
    Object {
      "replacedBy": Array [
        "padding-line-between-statements",
      ],
      "ruleId": "lines-around-directive",
    },
  ],
  "warningCount": 5,
}
`;
